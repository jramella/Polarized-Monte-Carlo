% Models correction for mirror by Cameronclose allclear allwarning offradius  	= 2.03/2; % microns */lambda 		= 0.6328; % microns nre_med = 1.333;mus		= 11.742;s=(10/mus)/80;x=[-40:40]*s;y=[-40:40]*s;%----------------------------------------------------------%% H source%----------------------------------------------------------%load outHIhi 	= (outHI);clear outHIload outHQhq 	= (outHQ);clear outHQload outHUhu	= (outHU);clear outHUload outHVhv 	= (outHV);clear outHVHH	= flipud(fliplr((hi+hq)/2));HV	= flipud(fliplr((hi-hq)/2));HP	= flipud(fliplr((hi-hu)/2)); % mirror rotation HR	= flipud(fliplr((hi+hv)/2)); % mirror rotation %----------------------------------------------------------% V source%----------------------------------------------------------%load outVIvi 	= (outVI);clear outVIload outVQvq 	= (outVQ);clear outVQload outVUvu	= (outVU);clear outVUload outVVvv 	= (outVV);clear outVVVH	= flipud(fliplr((vi+vq)/2));VV	= flipud(fliplr((vi-vq)/2));VP	= flipud(fliplr((vi-vu)/2)); % mirror rotation VR	= flipud(fliplr((vi+vv)/2)); % mirror rotation %----------------------------------------------------------%% P source%----------------------------------------------------------%load outPIpPi 	= (outPI);clear outPIload outPQpq 	= (outPQ);clear outPQload outPUpu	= (outPU);clear outPUload outPVpv 	= (outPV);clear outPVPH	= flipud(fliplr((pPi+pq)/2));PV	= flipud(fliplr((pPi-pq)/2));PP	= flipud(fliplr((pPi-pu)/2)); % mirror rotation PR	= flipud(fliplr((pPi+pv)/2)); % mirror rotation %----------------------------------------------------------%% R source%----------------------------------------------------------%load outRIri 	= (outRI);clear outRIload outRQrq 	= (outRQ);clear outRQload outRUru	= (outRU);clear outRUload outRVrv 	= (outRV);clear outRVRH=flipud(fliplr((ri+rq)/2));RV=flipud(fliplr((ri-rq)/2));RP=flipud(fliplr((ri-ru)/2)); % mirror rotation RR=flipud(fliplr((ri+rv)/2)); % mirror rotation %----------------------------------------------------------%% Mueller generation%----------------------------------------------------------%m11=HH+HV+VH+VV; m12=HH+HV-VH-VV; m13=2*PH+2*PV-m11; m14=2*RH+2*RV-m11;m21=HH-HV+VH-VV; m22=HH-HV-VH+VV; m23=2*PH-2*PV-m21; m24=2*RH-2*RV-m21; m31=2*HP+2*VP-m11; m32=2*HP-2*VP-m12; m33=4*PP-2*PH-2*PV-m31; m34=4*RP-2*RH-2*RV-m31; m41=2*HR+2*VR-m11; m42=2*HR-2*VR-m12; m43=4*PR-2*PH-2*PV-m41; m44=4*RR-2*RH-2*RV-m41; x=[-20:20]*s;y=[-20:20]*s;miin=-5e-5;maax=5e-5;set(gca,'fontsize',15)set(colorbar,'fontsize',15)if 0 %set this to 1 if you want to select a different m11 area'grab a section of the m11 image just off the center'    imagesc(m11)    a=imcrop;    norm=mean2(a);endnorm=1e6;rest=[-1e-5 1e-5];figure(1);clf;colormap(jet)subplot(4,4,1)imagesc(x,y,m11./norm,rest);set(gca,'Xtick',[]);set(gca,'Ytick',[]);axis('square')colorbarsubplot(4,4,2)imagesc(x,y,m12./norm,rest);set(gca,'Xtick',[]);set(gca,'Ytick',[]);colorbaraxis('square')colorbarsubplot(4,4,3)imagesc(x,y,m13./norm,rest);set(gca,'Xtick',[]);set(gca,'Ytick',[]);axis('square')colorbarsubplot(4,4,4)imagesc(x,y,m14./norm,rest);set(gca,'Xtick',[]);set(gca,'Ytick',[]);axis('square')colorbarsubplot(4,4,5)imagesc(x,y,m21./norm,rest);set(gca,'Xtick',[]);set(gca,'Ytick',[]);axis('square')colorbarsubplot(4,4,6)imagesc(x,y,m22./norm,rest);set(gca,'Xtick',[]);set(gca,'Ytick',[]);axis('square')colorbarsubplot(4,4,7)imagesc(x,y,m23./norm,rest);set(gca,'Xtick',[]);set(gca,'Ytick',[]);axis('square')colorbarsubplot(4,4,8)imagesc(x,y,m24./norm,rest);set(gca,'Xtick',[]);set(gca,'Ytick',[]);axis('square')colorbarsubplot(4,4,9)imagesc(x,y,m31./norm,rest);set(gca,'Xtick',[]);set(gca,'Ytick',[]);axis('square')colorbarsubplot(4,4,10)imagesc(x,y,m32./norm,rest);set(gca,'Xtick',[]);set(gca,'Ytick',[]);axis('square')colorbarsubplot(4,4,11)imagesc(x,y,m33./norm,rest);set(gca,'Xtick',[]);set(gca,'Ytick',[]);axis('square')colorbarsubplot(4,4,12)imagesc(m34./norm,rest);set(gca,'Xtick',[]);set(gca,'Ytick',[]);axis('square')colorbarsubplot(4,4,13)imagesc(x,y,m41./norm,rest);set(gca,'Xtick',[]);set(gca,'Ytick',[]);axis('square')colorbarsubplot(4,4,14)imagesc(x,y,m42./norm,rest);set(gca,'Xtick',[]);set(gca,'Ytick',[]);axis('square')colorbarsubplot(4,4,15)imagesc(x,y,m43./norm,rest);set(gca,'Xtick',[]);set(gca,'Ytick',[]);axis('square')colorbarsubplot(4,4,16)imagesc(x,y,m44./norm,rest);set(gca,'Xtick',[]);set(gca,'Ytick',[]);axis('square')colorbar%quarterwaveplate at 45 degrees orientation% pi=3.1416% MM=[1 0 0 0;%     0 cos(pi/2) 0 -sin(pi/2);%     0 0 1 0;%     0 sin(pi/2) 0 cos(pi/2)]+.001;% % cd ..for i=1:99    for j=1:99        MM=[m11(i,j) m12(i,j) m13(i,j) m14(i,j);            m21(i,j) m22(i,j) m23(i,j) m24(i,j);            m31(i,j) m32(i,j) m33(i,j) m34(i,j);            m41(i,j) m42(i,j) m43(i,j) m44(i,j)];                   if det(MM)<=0             Mdepol(i,j)=NaN;        Morientation(i,j)=NaN;        linr(i,j)=NaN;       else        [depol,linreta,orientation,diattenuation]=decompose_images((MM));               Mdepol(i,j)=depol;        Morientation(i,j) =orientation;        linr(i,j) =linreta;        Diattenuation(i,j)=diattenuation;       end    endendfigure(2);clfsubplot(2,2,1)imagesc(Mdepol,[-1 1]);colorbartitle('depol')subplot(2,2,2)imagesc(abs(Morientation)*180/3.1416);colorbar%title(mean2(Morientation)*180/3.1416)title('Orientation')%title(nanmean(abs(Morientation(:)))*180/3.1416)subplot(2,2,3)imagesc(abs(linr)*180/3.1416,[0 40]);colorbartitle('retardation')colorbarsubplot(2,2,4)imagesc(Diattenuation,[0 1]);colorbartitle('diattenuation')colorbar